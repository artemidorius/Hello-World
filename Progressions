import java.util.Scanner;

public class AP_or_GP {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n, ns;
		double total = 0;
		System.out.println("Enter no. of terms, minimum 3 terms");
		n = sc.nextInt();
		int a[] = new int[n];
		System.out.println("Enter terms of sequence");
		for (int i = 0; i < a.length; i++) {

			a[i] = sc.nextInt();

		}
		if (a[1] / a[0] == a[n - 1] / a[n - 2]) { // GP
			System.out.println("Given series is a Geometric progression");
			System.out.println("The G.P. has a common ratio of :" + (a[2] / a[1]));
			int r = a[2] / a[1];
			System.out.println("The G.P. has first term: " + a[0]);
			System.out.println("Enter the index of the term you want to find in your G.P");
			ns = sc.nextInt();
			total = (a[0] * Math.pow(r, ns - 1));
			System.out.println("Term at " + ns + "th index is " + total);
			System.out.println("Enter the number of terms you want to see in your G.P");
			int terms = sc.nextInt();
			int b[] = new int[terms];
			b[0] = a[0];
			for (int i = 1; i < terms; i++) {
				b[i] = b[i - 1] * r;
			}
			System.out.println("Given G.P. till " + terms + " terms long");
			for (int j = 0; j < terms; j++) {
				System.out.print(b[j] + ",  ");
			}
			System.out.println();
			System.out.println("Enter the number of terms till which you want to find sum of ");
			int sun = sc.nextInt();
			if (r > 1) {
				double sum = (a[0] * (Math.pow(r, sun) - 1)) / (r - 1);
				System.out.println("Sum of " + sun + " terms = " + sum);

			} else if (r < 1) {
				double sum = (a[0] * (1 - Math.pow(r, sun))) / (r - 1);
				System.out.println("Sum of " + sun + " terms = " + sum);

			} else {
				System.out.println("Sum of " + sun + " terms = " + sun * a[0]);

			}
			System.out.println("Program terminated");
			System.exit(0);

		}  if (a[2] - a[1] == a[n-1] - a[n - 2]) {// AP
			System.out.println("Given series is an Arithmetic Progression");
			System.out.println(" The A.P has a common difference of " + (a[2] - a[1]));
			int d = a[2] - a[1];
			System.out.println("The A.P. has first term: " + a[0]);
			System.out.println("Enter the index of the term you want to find in your A.P");
			ns = sc.nextInt();
			total = (a[0] + (ns - 1) * d);
			System.out.println("Term at " + ns + "th index is " + total);
			System.out.println("Enter the number of terms you want to see in your A.P");
			int t = sc.nextInt();
			int c[] = new int[t];
			c[0] = a[0];
			for (int i = 1; i < t; i++) {
				c[i] = c[i - 1] + d;
			}
			System.out.println("Given A.P till " + t + " terms long");
			for (int i = 0; i < t; i++) {
				System.out.print(c[i] + ",  ");
			}
			System.out.println();
			System.out.println("Enter the number of terms till which you want to find sum of ");
			int f = sc.nextInt();
			double sum = ((f) / 2) * (2 * a[0] + (f - 1) * d);
			System.out.println("Sum of " + f + " terms = " + sum);
			System.out.println("Program terminated");

			System.exit(0);

		} else {
			System.out.println("Given series is not a valid progression!");

		}
	}
}
